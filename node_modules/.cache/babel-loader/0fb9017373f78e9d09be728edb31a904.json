{"ast":null,"code":"var _jsxFileName = \"/home/vkaps/Documents/Insta_frontend/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport logo from \"../img/logo.png\";\nimport \"../css/SignUp.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport { toast } from 'react-toastify';\nimport jwt_decode from \"jwt-decode\";\nimport { LoginContext } from \"../context/LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const {\n    setUserLogin\n  } = useContext(LoginContext);\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // Toast functions\n\n  const notifyA = msg => toast.error(msg);\n\n  const notifyB = msg => toast.success(msg);\n\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\n  const postData = () => {\n    //checking email\n    if (!emailRegex.test(email)) {\n      notifyA(\"Invalid email\");\n      return;\n    } else if (!passRegex.test(password)) {\n      notifyA(\"Password must contain at least 8 characters, including at least 1 number and 1 includes both lower and uppercase letters and special characters for example #,?,!\");\n      return;\n    } // Sending data to server\n\n\n    fetch(\"http://localhost:5000/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        userName: userName,\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        notifyA(data.error);\n      } else {\n        notifyB(data.message);\n        navigate(\"/signin\");\n      }\n\n      console.log(data);\n    });\n  };\n\n  const continueWithGoogle = credentialResponse => {\n    console.log(credentialResponse);\n    const jwtDetail = jwt_decode(credentialResponse.credential);\n    console.log(jwtDetail);\n    fetch(\"http://localhost:5000/googleLogin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: jwtDetail.name,\n        userName: jwtDetail,\n        email: jwtDetail.email,\n        email_verified: jwtDetail.email_verified,\n        clientId: credentialResponse.clientId,\n        Photo: jwtDetail.picture\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        notifyA(data.error);\n      } else {\n        notifyB(\"Signed In Successfully\");\n        console.log(data);\n        localStorage.setItem(\"jwt\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        setUserLogin(true);\n        navigate(\"/\");\n      }\n\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"signUpLogo\",\n          src: logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginPara\",\n          children: [\"Sign up to see photos and videos \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 46\n          }, this), \" from your friends\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            value: email,\n            placeholder: \"Email\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Full Name\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            placeholder: \"Username\",\n            value: userName,\n            onChange: e => {\n              setUserName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginPara\",\n          style: {\n            fontSize: \"12px\",\n            margin: \"3px 0px\"\n          },\n          children: [\"By signing up, you agree to out Terms, \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 52\n          }, this), \" privacy policy and cookies policy.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"submit-btn\",\n          value: \"Sign Up\",\n          onClick: () => {\n            postData();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: credentialResponse => {\n            continueWithGoogle(credentialResponse);\n          },\n          onError: () => {\n            console.log('Login Failed');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form2\",\n        children: [\"Already have an account ?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"blue\",\n              cursor: \"pointer\"\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"zpMJ/ZYs9b3/+ZVj1Q5xNIoEruE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useEffect","useState","useContext","logo","Link","useNavigate","GoogleLogin","toast","jwt_decode","LoginContext","SignUp","setUserLogin","navigate","name","setName","email","setEmail","userName","setUserName","password","setPassword","notifyA","msg","error","notifyB","success","emailRegex","passRegex","postData","test","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","console","log","continueWithGoogle","credentialResponse","jwtDetail","credential","email_verified","clientId","Photo","picture","localStorage","setItem","token","user","e","target","value","fontSize","margin","color","cursor"],"sources":["/home/vkaps/Documents/Insta_frontend/src/components/SignUp.js"],"sourcesContent":["import React, { useEffect, useState,useContext } from \"react\";\nimport logo from \"../img/logo.png\";\nimport \"../css/SignUp.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport { toast } from 'react-toastify';\nimport jwt_decode from \"jwt-decode\";\nimport { LoginContext } from \"../context/LoginContext\";\n\n\n\nexport default function SignUp() {\n  const { setUserLogin } = useContext(LoginContext)\n  const navigate = useNavigate()\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\")\n  const [userName, setUserName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  // Toast functions\n  const notifyA = (msg) => toast.error(msg)\n  const notifyB = (msg) => toast.success(msg)\n\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n\n  const postData = () => {\n    //checking email\n    if (!emailRegex.test(email)) {\n      notifyA(\"Invalid email\")\n      return\n    } else if (!passRegex.test(password)) {\n      notifyA(\"Password must contain at least 8 characters, including at least 1 number and 1 includes both lower and uppercase letters and special characters for example #,?,!\")\n      return\n    }\n\n    // Sending data to server\n    fetch(\"http://localhost:5000/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        userName: userName,\n        email: email,\n        password: password\n\n      })\n    }).then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          notifyA(data.error)\n        } else {\n          notifyB(data.message)\n          navigate(\"/signin\")\n        }\n        console.log(data)\n      })\n  }\n\n  const continueWithGoogle =(credentialResponse)=>{\n    console.log(credentialResponse);\n    const jwtDetail = jwt_decode(credentialResponse.credential)\n    console.log(jwtDetail)\n    fetch(\"http://localhost:5000/googleLogin\",{\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: jwtDetail.name,\n        userName: jwtDetail,\n        email:jwtDetail.email,\n        email_verified:jwtDetail.email_verified,\n        clientId:credentialResponse.clientId,\n        Photo:jwtDetail.picture\n\n      })\n    }).then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          notifyA(data.error)\n        } else {\n          notifyB(\"Signed In Successfully\")\n          console.log(data)\n          localStorage.setItem(\"jwt\", data.token)\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\n          setUserLogin(true)\n          navigate(\"/\")\n        }\n        console.log(data)\n      })\n  }\n\n  return (\n    <div className=\"signUp\">\n      <div className=\"form-container\">\n        <div className=\"form\">\n          <img className=\"signUpLogo\" src={logo} alt=\"\" />\n          <p className=\"loginPara\">\n            Sign up to see photos and videos <br /> from your friends\n          </p>\n          <div>\n            <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder=\"Email\" onChange={(e) => { setEmail(e.target.value) }} />\n          </div>\n          <div>\n            <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Full Name\" value={name} onChange={((e) => { setName(e.target.value) })} />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Username\"\n              value={userName}\n              onChange={(e) => { setUserName(e.target.value) }}\n            />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => { setPassword(e.target.value) }}\n            />\n          </div>\n          <p\n            className=\"loginPara\"\n            style={{ fontSize: \"12px\", margin: \"3px 0px\" }}\n          >\n            By signing up, you agree to out Terms, <br /> privacy policy and\n            cookies policy.\n          </p>\n          <input type=\"submit\" id=\"submit-btn\" value=\"Sign Up\" onClick={() => { postData() }} />\n          <hr/>\n          <GoogleLogin\n            onSuccess={credentialResponse => {\n             continueWithGoogle(credentialResponse)\n            }}\n            onError={() => {\n              console.log('Login Failed');\n            }}\n          />\n        </div>\n        <div className=\"form2\">\n          Already have an account ?\n          <Link to=\"/signin\">\n            <span style={{ color: \"blue\", cursor: \"pointer\" }}>Sign In</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}